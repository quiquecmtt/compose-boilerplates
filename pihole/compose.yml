services:
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    hostname: pihole
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    environment:
      DNSMASQ_LISTENING: all
      WEBPASSWORD: ${PIHOLEPASS:?err}
      DNS1: ${PIHOLEDNS1:-1.1.1.1}
      DNS2: ${PIHOLEDNS2:-8.8.8.8}
    networks:
      default:
      traefik-network:
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      # - "67:67/udp"
      # - "80:80/tcp"
      # - "80:80/udp"
    volumes:
      - pihole-data:/etc/pihole/
      - pihole-dnsmasqd:/etc/dnsmasq.d/
    labels:
      traefik.enable: "true"
      traefik.http.routers.pihole.rule: Host(`home.${TS_TLD:?err}`) && (PathPrefix(`/pihole`) || HeaderRegexp(`Referer`, `.*/pihole/.*`))
      traefik.http.routers.pihole.entrypoints: "web-secure"
      traefik.http.routers.pihole.middlewares: "redirect-pihole-admin@file,pihole-location"
      traefik.http.routers.pihole.tls: "true"
      traefik.http.routers.pihole.service: "pihole"
      traefik.http.services.pihole.loadbalancer.server.port: "80"
      traefik.http.middlewares.pihole-location.plugin.rewriteHeaders.rewrites.response[0].header=Location'
      traefik.http.middlewares.pihole-location.plugin.rewriteHeaders.rewrites.response[0].regex=^/(.+)$'
      traefik.http.middlewares.pihole-location.plugin.rewriteHeaders.rewrites.response[0].replacement=/pihole/$1'

volumes:
  pihole-data:
  pihole-dnsmasqd:

networks:
  traefik-network:
    name: traefik-net
    external: true
