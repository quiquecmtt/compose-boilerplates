name: searxng

services:
  valkey:
    image: docker.io/valkey/valkey:8-alpine
    restart: unless-stopped
    volumes:
      - valkey-data:/data
    cap_drop:
      - ALL
    cap_add:
      - SETGID
      - SETUID
      - DAC_OVERRIDE

  app:
    image: docker.io/searxng/searxng:latest
    restart: unless-stopped
    networks:
      default:
      traefik-network:
    volumes:
      - app-settings:/etc/searxng:rw
    environment:
      SEARXNG_URL: https://search.${TS_TLD:?err}/
      SEARXNG_SECRET: ${SEARXNG_SECRET:?err}
      SEARXNG_IMAGE_PROXY: true
      SEARXNG_REDIS_URL: redis://searxng-valkey-1
      UWSGI_WORKERS: ${SEARXNG_UWSGI_WORKERS:-4}
      UWSGI_THREADS: ${SEARXNG_UWSGI_THREADS:-4}
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    labels:
      traefik.enable: true
      traefik.http.routers.searxng.rule: Host(`search.${TS_TLD:?err}`)
      traefik.http.routers.searxng.entrypoints: web-secure
      # traefik.http.routers.searxng.middlewares: ""
      traefik.http.routers.searxng.tls: true
      traefik.http.routers.searxng.service: searxng
      traefik.http.services.searxng.loadbalancer.server.port: 8080

networks:
  traefik-network:
    name: traefik-net
    external: true

volumes:
  app-settings:
  valkey-data:
